[{"content":"本文将介绍在本地搭建 Hugo 并通过 Github Pages 和 Vercel 部署 Hugo 的方法。以下所叙之方法就是我在部署本站点时所使用的，具有借鉴意义。如果在部署过程中遇到报错或其他困难，可以上网搜索或在评论区留言——我看到后会提供力所能及的建议。\n在部署 Hugo 之前，需要进行的准备：\n安装 Git. Git 用于版本控制和代码管理。Linux 和 MacOS 系统中内置 Git ，而 Windows 用户需要手动安装。下载地址: https://git-scm.com/ 。安装过程中不需要选择任何多余选项，一直点下一步即可。 拥有一个 Github 账号，用于托管代码文件。注册地址: https://github.com/login 拥有一个称手的文本编辑器：推荐使用 Visual Studio Code、Sublime Text 或者你喜欢的编辑器。 网络环境良好。为了避免下载文件或上传文件至 Github 过程中出现错误，建议科学上网。 如果你做好了如下准备，那么恭喜你，你可以进行下一步啦！\n下载并安装 Hugo 在 Hugo 的 Release 页面找到最新版本的 Hugo ，选择相应版本下载。 此外，还可以通过 Hugo 官网上的指示下载。\n创建站点 将下载后的内容放在一个空文件夹中。在当前文件夹上方地址栏输入 cmd ，唤起命令行。在命令行中输入 hugo new site 你的站点名称 ，创建站点。 输入 cd 你的站点名称 切换目录，并将 hugo.exe 复制到这个文件夹中，以避免配置环境变量。 用命令行在当前目录下输入 hugo server 启动本地站点(通过 Ctrl + C 关闭这一服务)。地址通常是 localhost:1313 。如果页面显示“Page not found”，说明此前的所有配置都是正常无误的。\n配置主题 Hugo 默认是没有主题的，需要到 官网 去下载主题。我使用的主题是 Jimmy Cai 创作的 Stack 主题。接下来的部分内容会以此主题为例。\n将主题下载完成后并解压至 themes 文件夹中，将 exampleSite 文件夹中的 content 和hugo.yaml 复制到主文件夹中，并删掉原来的 hugo.toml 和 Content/post/rich-content ，避免出现不兼容的错误。（图片上的的“春树暮云”是本博客名） 修改 hugo.yaml 中的 theme 选项，将其修改为与主题文件夹同名。 再次在命令行输入 hugo server启动服务，若此时能看见类似下图的样式，说明此前操作无误。 在 config.yaml 中输入相关配置。文件各项配置解释如下，用作参考：\nbaseurl: https://example.com # 网站的基本 URL 。替换为你自己的网站域名。 languageCode: en-us # 网站的默认语言代码，zh-cn 指中文简体。 theme: hugo-theme-stack # 使用的 Hugo 主题，这里是 Stack 主题。 paginate: 3 # 每页显示的内容数量，通常用于分页设置。 title: Example Site # 网站的标题，会显示在浏览器标签上。 copyright: Example Person # 网站的版权信息，通常显示在页面底部。 # Theme i18n support # Available values: ar, bn, ca, de, el, en, es, fr, hu, id, it, ja, ko, nl, pt-br, th, uk, zh-cn, zh-hk, zh-tw DefaultContentLanguage: en # 设置网站的默认内容语言。可选值见上注释。 # Set hasCJKLanguage to true if DefaultContentLanguage is in [zh-cn ja ko] # This will make .Summary and .WordCount behave correctly for CJK languages. hasCJKLanguage: false # 如果默认语言是中文、日文或韩文，设置为 true 以确保摘要和字数统计正确。 languages: en: languageName: English # 英语语言配置 title: Example Site # 英文站点标题 weight: 1 # 语言权重，数值越小排序越靠前 params: description: Example description # 英文站点描述 zh-cn: languageName: 中文 # 中文语言配置 title: 演示站点 # 中文站点标题 weight: 2 # 中文站点语言权重 params: description: 演示说明 # 中文站点描述 ar: languageName: عربي # 阿拉伯语配置 languagedirection: rtl # 文字方向，从右到左 title: موقع تجريبي # 阿拉伯语站点标题 weight: 3 # 阿拉伯语站点语言权重 params: description: وصف تجريبي # 阿拉伯语站点描述 services: # Change it to your Disqus shortname before using disqus: shortname: \u0026#34;hugo-theme-stack\u0026#34; # Disqus 评论系统的短名称，需替换为你自己的 Disqus 短名称。 # GA Tracking ID googleAnalytics: id: # Google Analytics 追踪 ID，用于网站流量统计。 permalinks: post: /p/:slug/ # 博客文章的永久链接格式，使用文章的 slug 作为路径。 page: /:slug/ # 页面内容的永久链接格式。 params: mainSections: - post # 主内容区域，显示文章内容。 featuredImageField: image # 特色图片字段的名称。 rssFullContent: true # RSS 提要是否包含全文内容。 favicon: # e.g.: favicon placed in `static/favicon.ico` of your site folder, then set this field to `/favicon.ico` (`/` is necessary) # 网站的favicon路径，例如`/favicon.ico`。 footer: since: 2020 # 网站创建年份，通常显示在页脚。 customText: # 自定义页脚文本。 dateFormat: published: Jan 02, 2006 # 发布日期格式。 lastUpdated: Jan 02, 2006 15:04 MST # 最后更新日期格式。 sidebar: emoji: 🍥 # 侧边栏标题旁显示的 emoji。 subtitle: Lorem ipsum dolor sit amet, consectetur adipiscing elit. # 侧边栏的副标题。 avatar: enabled: true # 是否启用头像显示。 local: true # 是否使用本地头像。 src: img/avatar.png # 头像图片路径。 article: math: false # 是否支持数学公式渲染。 toc: true # 是否显示文章目录。 readingTime: true # 是否显示预计阅读时间。 license: enabled: true # 是否启用文章版权信息。 default: Licensed under CC BY-NC-SA 4.0 # 默认版权协议。 comments: enabled: true # 是否启用评论功能。 provider: disqus # 选择的评论提供商，默认为 Disqus。 disqusjs: shortname: # DisqusJS 的短名称。 apiUrl: # DisqusJS 的 API URL。 apiKey: # DisqusJS 的 API Key。 admin: # DisqusJS 的管理员用户名。 adminLabel: # DisqusJS 管理员标签。 utterances: repo: # Utterances 评论系统的 GitHub 仓库地址。 issueTerm: pathname # Utterances 评论系统的议题关联方式，使用页面路径。 label: # Utterances 评论系统的标签。 beaudar: repo: # Beaudar 评论系统的 GitHub 仓库地址。 issueTerm: pathname # Beaudar 评论系统的议题关联方式。 label: # Beaudar 评论系统的标签。 theme: # Beaudar 评论系统的主题。 remark42: host: # Remark42 的主机地址。 site: # Remark42 的站点标识符。 locale: # Remark42 的语言设置。 vssue: platform: # Vssue 使用的平台（例如 GitHub）。 owner: # Vssue 评论仓库的所有者。 repo: # Vssue 评论的 GitHub 仓库地址。 clientId: # Vssue 的 OAuth 应用 Client ID。 clientSecret: # Vssue 的 OAuth 应用 Client Secret。 autoCreateIssue: false # 是否自动创建评论议题。 waline: serverURL: # Waline 评论系统的服务器 URL。 lang: # Waline 的语言设置。 pageview: # 是否启用页面浏览统计。 emoji: # Waline 的 Emoji 表情包地址。 - https://unpkg.com/@waline/emojis@1.0.1/weibo requiredMeta: - name # 评论时需要填写的字段，用户名。 - email # 评论时需要填写的字段，电子邮件地址。 - url # 评论时需要填写的字段，网址。 locale: admin: Admin # Waline 评论系统的管理员名称。 placeholder: # Waline 评论框的占位符文本。 twikoo: envId: # Twikoo 评论系统的环境 ID。 region: # Twikoo 评论系统的部署区域。 path: # Twikoo 评论系统的路径。 lang: # Twikoo 评论系统的语言设置。 cactus: defaultHomeserverUrl: \u0026#34;https://matrix.cactus.chat:8448\u0026#34; # Cactus.Chat 的默认主服务器 URL。 serverName: \u0026#34;cactus.chat\u0026#34; # Cactus.Chat 的服务器名称。 siteName: \u0026#34;\u0026#34; # You must insert a unique identifier here matching the one you registered (See https://cactus.chat/docs/getting-started/quick-start/#register-your-site) # Cactus.Chat 的站点名称，需与注册的标识符匹配。 giscus: repo: # Giscus 评论系统的 GitHub 仓库地址。 repoID: # Giscus 仓库的唯一标识符。 category: # Giscus 的分类名称。 categoryID: # Giscus 分类的唯一标识符。 mapping: # Giscus 的议题关联方式。 lightTheme: # Giscus 的浅色主题设置。 darkTheme: # Giscus 的深色主题设置。 reactionsEnabled: 1 # 是否启用 Giscus 的反应功能。 emitMetadata: 0 # 是否启用 Giscus 的元数据发射功能。 gitalk: owner: # Gitalk 评论系统的仓库所有者。 admin: # Gitalk 评论系统的管理员用户名。 repo: # Gitalk 评论的 GitHub 仓库地址。 clientID: # Gitalk 的 OAuth 应用 Client ID。 clientSecret: # Gitalk 的 OAuth 应用 Client Secret。 cusdis: host: # Cusdis 评论系统的主机地址。 id: # Cusdis 的站点标识符。 widgets: homepage: - type: search # 首页的小部件，搜索功能。 - type: archives # 首页的小部件，文章归档。 params: limit: 5 # 显示的归档文章数量。 - type: categories # 首页的小部件，文章分类。 params: limit: 10 # 显示的分类数量。 - type: tag-cloud # 首页的小部件，标签云。 params: limit: 10 # 显示的标签数量。 page: - type: toc # 页面的小部件，显示文章目录。 opengraph: twitter: # Your Twitter username site: # 你的 Twitter 用户名，将在 OpenGraph 元数据中使用。 # Available values: summary, summary_large_image card: summary_large_image # Twitter 卡片类型。可以选择 `summary` 或 `summary_large_image`，后者显示大图。 defaultImage: opengraph: enabled: false # 是否为没有特色图片的页面启用默认 OpenGraph 图片。 local: false # 是否使用本地图片作为 OpenGraph 图片。 src: # 默认 OpenGraph 图片的路径。 colorScheme: # Display toggle toggle: true # 是否在页面上显示颜色模式切换按钮。 # Available values: auto, light, dark default: auto # 默认的颜色模式。可以选择自动切换（auto），或固定为亮色（light）或暗色（dark）。 imageProcessing: cover: enabled: true # 是否为封面图片启用自动处理功能，例如裁剪、缩放等。 content: enabled: true # 是否为内容图片启用自动处理功能。 ### Custom menu ### See https://stack.jimmycai.com/config/menu ### To remove about, archive and search page menu item, remove `menu` field from their FrontMatter menu: main: [] # 自定义主菜单的配置，可以在这里添加导航链接。 social: - identifier: github # 社交链接的标识符，通常用于指定图标。 name: GitHub # 链接的显示名称。 url: https://github.com/CaiJimmy/hugo-theme-stack # GitHub 个人主页的链接。 params: icon: brand-github # 使用的社交图标，这里是 GitHub 图标。 - identifier: twitter # 另一个社交链接配置，这里是 Twitter。 name: Twitter # Twitter 链接的显示名称。 url: https://twitter.com # Twitter 的链接。 params: icon: brand-twitter # 使用的社交图标，这里是 Twitter 图标。 related: includeNewer: true # 是否在相关文章中包含较新的文章。 threshold: 60 # 相关文章匹配的相似度阈值，范围是0到100。 toLower: false # 是否将标签和分类转换为小写。 indices: - name: tags # 使用标签作为相关文章的匹配依据。 weight: 100 # 标签匹配的权重值。 - name: categories # 使用分类作为相关文章的匹配依据。 weight: 200 # 分类匹配的权重值。 markup: goldmark: renderer: ## Set to true if you have HTML content inside Markdown unsafe: true # 如果 Markdown 中包含 HTML 内容，设置为 true 以允许渲染这些 HTML。 tableOfContents: endLevel: 4 # 目录生成时的最大标题级别。 ordered: true # 目录项是否使用有序列表。 startLevel: 2 # 目录生成时的起始标题级别。 highlight: noClasses: false # 语法高亮时是否禁用 CSS 类名。 codeFences: true # 是否启用代码块语法高亮。 guessSyntax: true # 是否自动猜测代码块的语言进行语法高亮。 lineNoStart: 1 # 代码行号的起始值。 lineNos: true # 是否在代码块中显示行号。 lineNumbersInTable: true # 是否在表格样式中显示行号。 tabWidth: 4 # 代码块中 Tab 的宽度（空格数）。 更多相关配置参见官网，例如网站字体配置、自定义页眉或页脚等。\n撰写文章 在 你的站点名称/content/post 文件夹下新建文件夹，在新建文件夹中创建 index.md 文件，就代表创建一篇新文章了。\n可以在 你的站点名称 页面打开并通过命令行创建新文章，命令如下： hugo new content post/新文章标题/index.md 之后通过 VS Code 或其他编辑器，用 markdown 语言写文章。\n在使用 hugo 命令生成的文章的最上面，都有一块被 +++ 或 --- 包裹出来的区域，它的官方名称是 \u0026ldquo;Front matter\u0026rdquo;， 用以指定文章的各项属性。下面是我在 stack 主题的一篇示例文章中摘取的 Front Matter 片段，并写出了注释：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 +++ author = \u0026#34;Hugo Authors\u0026#34; # 作者名称，用于标识文章的创作者。 title = \u0026#34;Markdown Syntax Guide\u0026#34; # 文章标题，将显示在页面和导航中。 date = \u0026#34;2019-03-11\u0026#34; # 文章的发布日期，用于排序和展示。 description = \u0026#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.\u0026#34; # 文章的简短描述，通常用于摘要或 SEO。 tags = [ \u0026#34;markdown\u0026#34;, # 文章的标签，用于分类和搜索。标签是灵活的，可以添加多个。 \u0026#34;css\u0026#34;, \u0026#34;html\u0026#34;, \u0026#34;themes\u0026#34;, ] categories = [ \u0026#34;themes\u0026#34;, # 文章的类别，用于组织和过滤内容。每篇文章可以属于一个或多个类别。 \u0026#34;syntax\u0026#34;, ] series = [\u0026#34;Themes Guide\u0026#34;] # 文章系列，通常用于将相关文章组织在一起，例如教程或主题指南系列。 aliases = [\u0026#34;migrate-from-jekyl\u0026#34;] # 别名，用于创建文章的旧路径重定向到新路径。例如，当迁移文章时使用。 image = \u0026#34;pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg\u0026#34; # 文章的封面图片路径，用于展示文章时的视觉效果。 +++ Hugo 自带一个自动生成的 Front Matter 模板，但实际上，Hugo 支持的 Front Matter 字段远比默认模板提供的要丰富。以下是一些常用字段及其作用，你可以根据需要模仿原模板进行编写，或者编辑 archetypes 文件夹下的 default.md 文件，以自定义新的 Front Matter 模板。使用 hugo new 命令创建新文章时，Hugo 会根据 archetypes 目录下的模板自动生成 Front Matter。\n常用 Front Matter 字段说明 title ：文章标题。自动生成的标题与文件名保持一致。 date：文章创建日期。默认生成的日期为文件创建时的日期。 lastmod：文章最后更新日期。 description：文章简要描述，用于摘要或 SEO 优化。 categories：文章分类。 tags：文章标签。 image：封面图片。 draft：是否为草稿。如果设置为 true，Hugo 将不会编译该文件，文章也不会在页面中显示。 hidden：是否隐藏文章。与 draft 的区别在于，设置为 true 的文章仍然存在，只是不会在页面中显示，但可以通过正确的网址访问。 当然，并不是所有 Front Matter 属性在文章中都要出现。只要保证文章具有默认的属性，文章通常是不会出现 bugs 的。\n撰写页面、编辑 categories 和 tags 的方法与之基本相似，这里就不赘述了。\n部署博客 在博客内容撰写完毕以后，进入部署环节。\n同样的，Hugo 官方也提供了 部署 的相关教程。对于体积极小的静态页面来说，我不太认同单独将它配置在云服务器上。我推荐部署在 Vercel, Cloudflare Pages, Github Pages, Gitlab Pages, Netlify 等平台上。由于篇幅所限，我只写出部署至 Github Pages 并部署到 Vercel 的方法。\n我在部署之前，曾经在互联网上查找过部署在各大平台上的 Hugo 博客，并通过测速网站进行速度测试。对各个主题之间的差异忽略不计，结果如下：\n部署平台 中国最快/最慢时间 海外最快/最慢时间 中国/海外平均时间 Github Pages 内蒙古联通 0.304s / 湖北武汉电信 10.136s 德国法兰克福 0.018s / 南非 2.978s 1.829s / 0.541s Vercel 中国台湾 0.355s (大陆地区是浙江杭州移动 0.140s) / 黑龙江哈尔滨电信 3.088s 美国阿什本 0.050s / 美国洛杉矶② 1.602s 0.865s / 0.526s Cloudflare Pages 中国台湾 0.147s (大陆地区是上海移动 0.436s)/贵州贵阳移动 11.199s 美国阿什本 0.109s / 新加坡 2.133s 1.400s / 0.429s 我的网站(Vercel + Github Pages) 中国香港 0.054s (大陆地区是江苏苏州移动 0.196s)/ 福建厦门电信 7.119s 德国法兰克福 0.038s / 加拿大多伦多 0.732s 0.789s / 0.436s 因此，我推荐通过部署在 Github Pages 上，再通过 Vercel 的将 源文件部署，并绑定域名的方式。\n至于为什么是 Github Pages 而不是随便建一个 Github 仓库，因为包括官网在内的网上的大多数方法都基于 Github Pages 的。\n注意，如果要部署到 Vercel 上，一定要有一个自有域名。否则你必须每次都开全局代理访问你的博客\n但是 Github Pages 禁止百度抓取网页，对 SEO 不友好。所以建议再将 Github 仓库部署至 Vercel.\n部署至 Github Pages 新建一个 Github 仓库，仓库名为 你的名字.github.io，权限设置为 public.\n前往 Setting/Pages/Branch 选择 main 分支，并保存。\n在本地的博客文件夹中执行 hugo 命令，会生成 Public 文件夹。这是将要上传至 Github 仓库的文件夹，包含这个博客的全部静态资源。 接着输入以下命令，用于推送仓库至 Github Pages 上（若第一次上传，建议先提前输入账号密码，避免之后被绕得焦头烂额，方法见下下）：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 cd public/ # 进入 public 文件夹 git init # 初始化当前文件夹（此处就是 public 文件夹）为一个本地 git 仓库 git remote add origin git@github.com:username/username.github.io # 关联远程仓库。 # 远程仓库地址（git@github.com:username/username.github.io） # 也可以进入 Github 仓库-\u0026gt; Code -\u0026gt; SSH 复制远程仓库地址 git add . # 将当前文件夹的所有文件加入到暂存区 git commit -m \u0026#34;My first commit\u0026#34; # 把相关文件提交到本地仓库 git push origin main # 把相关文件推送到远程仓库的 main 分支 第一次 push 代码之前需要进行如下配置，之后 Git 会主动请求关联 Github 账户。\n1 2 git config --global user.name \u0026#34;你的 Github 用户名\u0026#34; git config --global user.email \u0026#34;你注册 Github 的邮箱\u0026#34; 我建议在推送仓库的时候打开全局代理，不然 Github 时不时掉一下线，非常烦人！\n还有一种替代 SSH 的方法，即下载 Github Desktop，在客户端中进行代码的上传。\nPush 文件时经常会遇到报错，我建议仔细报错信息，看看是因为什么原因导致报错的，如果不清楚，可以问问 ChatGPT. 我曾经经历过的报错，大多都是找 GPT 帮忙，它会耐心地指出我的错误，并详细地告诉我解决方法。\n上传成功并等待部署完成后，可以访问 https://{username}.github.io/ 检查无误后即可进行下一步操作。\n部署至 Vercel 并绑定域名 你需要拥有一个自己的域名才能部署至 Vercel. Vercel 分配的子域名在大陆无法访问。\n进入 Vercel 官网并登录，建议通过 Github 登录，以更方便地关联 Github 仓库。\n点击 “Add New” 再点击 “Project” 。在 “Import Git Repository” 中找到你上传到 Github 上的仓库。点击 “Import”. “Configure Project” 中的所有选项保持默认，点击 “Deploy”.等待大约十秒钟之后部署完成，会出现一个满屏彩带的页面。\nJust like this: 之后直奔主题，点击右侧的 “Add Domain”.进入 “Domain” 页面。 在搜索框内输入域名，选择合适的选项，并点击 “Add” ，按照要求添加 DNS 记录，等待 Vercel 验证通过并自动配置完 SSL 证书后即可访问。\n这里有个通常容易忽略的点，即在 Vercel 上部署的项目是强制 https 的，如果在 Cloudflare 或其他平台再次设置了强制 https，访问时会导致重定向次数过多，报出\u0026quot;ERR_TOO_MANY_REDIRECTS\u0026quot; 错误。我的解决方法是关闭 Cloudflare 上的相关配置，如果子域名需要强制 https，可以通过 .htaccess 文件实现。\n","date":"2024-08-30T18:12:32+08:00","image":"https://img.brume.top/file/026540fd273527d5f75c0.jpg","permalink":"https://brume.top/p/build-your-personal-blog-with-hugo/","title":"从零到一，用 Hugo 打造你的个人网站"},{"content":"Typecho 相比 WordPress，其所提供的接口较少，所以有些地方需要留心。遇到报错情况可以先在网上搜索相关资料，或者是询问 AI ，提出疑难。\n首页文章无限加载文章 在 functions.php 中加入一段判断 ajax 请求的方法： 1 2 3 4 5 6 7 8 9 function is_ajax() { if (isset($_SERVER[\u0026#39;HTTP_X_REQUESTED_WITH\u0026#39;])) { if (\u0026#39;xmlhttprequest\u0026#39; == strtolower($_SERVER[\u0026#39;HTTP_X_REQUESTED_WITH\u0026#39;])) { return true; } } return false; } 在首页模板 index.php 中加入判断，if (is_ajax ()): 则不输出 header footer 等信息。 最后一步，在模板公共 js 文件中加入以下代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var page = 1; var $body = (window.opera) ? (document.compatMode == \u0026#34;CSS1Compat\u0026#34; ? $(\u0026#39;html\u0026#39;) : $(\u0026#39;body\u0026#39;)) : $(\u0026#39;html,body\u0026#39;); $(\u0026#39;#blog_load_more\u0026#39;).click(function(event) { $(this).hide(); $(\u0026#39;#spinner\u0026#39;).show(); $.ajax({ type: \u0026#39;get\u0026#39;, url: SITE.default_url + \u0026#39;/page/\u0026#39; + parseInt(page + 1), success: function(data, textStatus, XMLHttpRequest) { page++; $(\u0026#39;.w-blog-list\u0026#39;).append(data); $(\u0026#39;#spinner\u0026#39;).hide(); $(\u0026#39;#blog_load_more\u0026#39;).show(); }, error: function(MLHttpRequest, textStatus, errorThrown) { $(\u0026#39;#spinner\u0026#39;).hide(); $.jGrowl(\u0026#39;Network Error\u0026#39;); } }); }); 其中 #blog_load_more 为需要绑定的加载更多按钮，#spinner 为加载过程中的动画，.w-blog-list 为首页文章列表容器。 由于 Typecho 并没有 Ajax 钩子函数，所以需要在 functions.php 中加入以下代码：\n1 2 3 4 5 6 7 8 9 function site_data() { $array = array( \u0026#39;site_url\u0026#39; =\u0026gt; Helper::options()-\u0026gt;siteUrl, \u0026#39;default_url\u0026#39; =\u0026gt; Helper::options()-\u0026gt;siteUrl . \u0026#39;index.php\u0026#39;, \u0026#39;theme_images_url\u0026#39; =\u0026gt; Helper::options()-\u0026gt;themeUrl . \u0026#39;/assets/images/\u0026#39;, ); echo json_encode($array); } 之后在 footer.php 中引入该数据：\n1 2 3 \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; var SITE = \u0026lt;?php site_data()?\u0026gt;; \u0026lt;/script\u0026gt; 此处的 SITE 就是一个 JSON 对象，可以直接用了。\n自定义的过滤器函数 WordPress 的 add_filter 据信很好用，而 Typecho 也可以实现类似的功能： 比如想把文章中的图片都加上 rel=\u0026quot;fancybox\u0026quot; 的属性，WordPress 可能使用的以下方法：\n1 2 3 4 5 6 7 8 9 add_filter(\u0026#39;the_content\u0026#39;, \u0026#39;fancybox_replace\u0026#39;); function fancybox_replace($content) { global $post; $pattern = \u0026#34;/\u0026lt;a(.*?)href=(\u0026#39;|\\\u0026#34;)([^\u0026gt;]*).(bmp|gif|jpeg|jpg|png)(\u0026#39;|\\\u0026#34;)(.*?)\u0026gt;(.*?)\u0026lt;\\/a\u0026gt;/i\u0026#34;; $replacement = \u0026#39;\u0026lt;a$1href=$2$3.$4$5 target=\u0026#34;_blank\u0026#34; rel=\u0026#34;fancybox\u0026#34;$6\u0026gt;$7\u0026lt;/a\u0026gt;\u0026#39;; $content = preg_replace($pattern, $replacement, $content); return $content; } 而 Typecho 中可以这么写：\n1 2 3 4 5 6 7 function themeInit($archive) { if ($archive-\u0026gt;is(\u0026#39;single\u0026#39;)) { $archive-\u0026gt;content = fancybox_replace($archive-\u0026gt;content); } } 获取文章第一张图片 分为 markdown 和 html 两种方式\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 function get_post_img($archive) { $cid = $archive-\u0026gt;cid; $db = Typecho_Db::get(); $rs = $db-\u0026gt;fetchRow($db-\u0026gt;select(\u0026#39;table.contents.text\u0026#39;) -\u0026gt;from(\u0026#39;table.contents\u0026#39;) -\u0026gt;where(\u0026#39;cid=?\u0026#39;, $cid)); $text = $rs[\u0026#39;text\u0026#39;]; if (0 === strpos($text, \u0026#39;\u0026#39;)) { preg_match(\u0026#39;/!\\[[^\\]]*]\\([^\\)]*\\.(png|jpeg|jpg|gif|bmp)\\)/i\u0026#39;, $text, $img); if (empty($img)) { return \u0026#39;none\u0026#39;; } else { preg_match(\u0026#34;/(?:\\()(.*)(?:\\))/i\u0026#34;, $img[0], $result); $img_url = $result[1]; return \u0026#39;\u0026lt;img src=\u0026#34;\u0026#39; . $img_url . \u0026#39;\u0026#34;/\u0026gt;\u0026#39;; } } else { preg_match_all(\u0026#34;/\\\u0026lt;img.*?src\\=\\\u0026#34;(.*?)\\\u0026#34;[^\u0026gt;]*\u0026gt;/i\u0026#34;, $text, $img); if (empty($img)) { return \u0026#39;none\u0026#39;; } else { $img_url = $img[1][0]; return \u0026#39;\u0026lt;img src=\u0026#34;\u0026#39; . $img_url . \u0026#39;\u0026#34;/\u0026gt;\u0026#39;; } } } 评论列表加 @ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 function get_comment_at($coid) { $db = Typecho_Db::get(); $prow = $db-\u0026gt;fetchRow($db-\u0026gt;select(\u0026#39;parent\u0026#39;)-\u0026gt;from(\u0026#39;table.comments\u0026#39;) -\u0026gt;where(\u0026#39;coid = ? AND status = ?\u0026#39;, $coid, \u0026#39;approved\u0026#39;)); $parent = $prow[\u0026#39;parent\u0026#39;]; if ($parent != \u0026#34;0\u0026#34;) { $arow = $db-\u0026gt;fetchRow($db-\u0026gt;select(\u0026#39;author\u0026#39;)-\u0026gt;from(\u0026#39;table.comments\u0026#39;) -\u0026gt;where(\u0026#39;coid = ? AND status = ?\u0026#39;, $parent, \u0026#39;approved\u0026#39;)); $author = $arow[\u0026#39;author\u0026#39;]; $href = \u0026#39;\u0026lt;a href=\u0026#34;#comment-\u0026#39; . $parent . \u0026#39;\u0026#34;\u0026gt;@\u0026#39; . $author . \u0026#39;\u0026lt;/a\u0026gt;\u0026#39;; echo $href; } else { echo \u0026#39;\u0026#39;; } } 实现文章阅读次数统计（非插件） 在文章页面引入 get_post_view () 方法。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //get_post_view($this) function get_post_view($archive) { $cid = $archive-\u0026gt;cid; $db = Typecho_Db::get(); $prefix = $db-\u0026gt;getPrefix(); if (!array_key_exists(\u0026#39;views\u0026#39;, $db-\u0026gt;fetchRow($db-\u0026gt;select()-\u0026gt;from(\u0026#39;table.contents\u0026#39;)))) { $db-\u0026gt;query(\u0026#39;ALTER TABLE `\u0026#39; . $prefix . \u0026#39;contents` ADD `views` INT(10) DEFAULT 0;\u0026#39;); echo 0; return; } $row = $db-\u0026gt;fetchRow($db-\u0026gt;select(\u0026#39;views\u0026#39;)-\u0026gt;from(\u0026#39;table.contents\u0026#39;)-\u0026gt;where(\u0026#39;cid = ?\u0026#39;, $cid)); if ($archive-\u0026gt;is(\u0026#39;single\u0026#39;)) { $db-\u0026gt;query($db-\u0026gt;update(\u0026#39;table.contents\u0026#39;)-\u0026gt;rows(array(\u0026#39;views\u0026#39; =\u0026gt; (int) $row[\u0026#39;views\u0026#39;] + 1))-\u0026gt;where(\u0026#39;cid = ?\u0026#39;, $cid)); } echo $row[\u0026#39;views\u0026#39;]; } 判断移动端访问 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 function is_mobile() { $user_agent = $_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;]; $mobile_browser = array( \u0026#34;mqqbrowser\u0026#34;, //手机QQ浏览器 \u0026#34;opera mobi\u0026#34;, //手机opera \u0026#34;juc\u0026#34;, \u0026#34;iuc\u0026#34;, //uc浏览器 \u0026#34;fennec\u0026#34;, \u0026#34;ios\u0026#34;, \u0026#34;applewebKit/420\u0026#34;, \u0026#34;applewebkit/525\u0026#34;, \u0026#34;applewebkit/532\u0026#34;, \u0026#34;ipad\u0026#34;, \u0026#34;iphone\u0026#34;, \u0026#34;ipaq\u0026#34;, \u0026#34;ipod\u0026#34;, \u0026#34;iemobile\u0026#34;, \u0026#34;windows ce\u0026#34;, //windows phone \u0026#34;240x320\u0026#34;, \u0026#34;480x640\u0026#34;, \u0026#34;acer\u0026#34;, \u0026#34;android\u0026#34;, \u0026#34;anywhereyougo.com\u0026#34;, \u0026#34;asus\u0026#34;, \u0026#34;audio\u0026#34;, \u0026#34;blackberry\u0026#34;, \u0026#34;blazer\u0026#34;, \u0026#34;coolpad\u0026#34;, \u0026#34;dopod\u0026#34;, \u0026#34;etouch\u0026#34;, \u0026#34;hitachi\u0026#34;, \u0026#34;htc\u0026#34;, \u0026#34;huawei\u0026#34;, \u0026#34;jbrowser\u0026#34;, \u0026#34;lenovo\u0026#34;, \u0026#34;lg\u0026#34;, \u0026#34;lg-\u0026#34;, \u0026#34;lge-\u0026#34;, \u0026#34;lge\u0026#34;, \u0026#34;mobi\u0026#34;, \u0026#34;moto\u0026#34;, \u0026#34;nokia\u0026#34;, \u0026#34;phone\u0026#34;, \u0026#34;samsung\u0026#34;, \u0026#34;sony\u0026#34;, \u0026#34;symbian\u0026#34;, \u0026#34;tablet\u0026#34;, \u0026#34;tianyu\u0026#34;, \u0026#34;wap\u0026#34;, \u0026#34;xda\u0026#34;, \u0026#34;xde\u0026#34;, \u0026#34;zte\u0026#34;, ); $is_mobile = false; foreach ($mobile_browser as $device) { if (stristr($user_agent, $device)) { $is_mobile = true; break; } } return $is_mobile; } Ajax 评论 AjaxComments 有小 bug，不太好用，可以直接使用以下的修改版代码，在公共 js 中调用 ajaxComments() 方法即可\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 function ajaxComment() { var selector = { commentMainFrame: \u0026#39;#comment\u0026#39;, commentList: \u0026#39;#commentlist\u0026#39;, commentNumText: \u0026#39;#comment h3\u0026#39;, commentReplyButton: \u0026#39;#comment span.reply\u0026#39;, submitForm: \u0026#39;#commentform\u0026#39;, submitTextarea: \u0026#39;#textarea\u0026#39;, submitButton: \u0026#39;#submit\u0026#39;, }; var parentId = \u0026#39;\u0026#39;; bindCommentReplyButton(); $(selector.submitTextarea).after(\u0026#39;\u0026lt;div style=\u0026#34;display:none;\u0026#34; id=\u0026#34;ajaxCommentMsg\u0026#34;\u0026gt;\u0026lt;\\/div\u0026gt;\u0026#39;); $msg = $(\u0026#39;#ajaxCommentMsg\u0026#39;); $(document).on(\u0026#39;submit\u0026#39;, selector.submitForm, function() { $msg.empty(); $(selector.submitButton).val(\u0026#39;正在发送\u0026#39;); $(selector.submitButton).attr(\u0026#39;disabled\u0026#39;, true).fadeTo(\u0026#39;slow\u0026#39;, 0.5); if ($(selector.submitForm).find(\u0026#39;#author\u0026#39;)[0]) { if ($(selector.submitForm).find(\u0026#39;#author\u0026#39;).val() == \u0026#39;\u0026#39;) { message(\u0026#39;昵称未填写\u0026#39;); enableCommentButton(); return false; } if ($(selector.submitForm).find(\u0026#39;#mail\u0026#39;).val() == \u0026#39;\u0026#39;) { message(\u0026#39;邮箱未填写\u0026#39;); enableCommentButton(); return false; } var filter = /^[^@\\s\u0026lt;\u0026amp;\u0026gt;]+@([a-z0-9]+\\.)+[a-z]{2,4}$/i; if (!filter.test($(selector.submitForm).find(\u0026#39;#mail\u0026#39;).val())) { message(\u0026#39;邮箱地址不正确\u0026#39;); enableCommentButton(); return false; } } if ($(selector.submitForm).find(selector.submitTextarea).val() == \u0026#39;\u0026#39;) { message(\u0026#39;评论为空\u0026#39;); enableCommentButton(); return false; } $.ajax({ url: $(this).attr(\u0026#39;action\u0026#39;), type: $(this).attr(\u0026#39;method\u0026#39;), data: $(this).serializeArray(), error: function() { message(\u0026#39;发送失败\u0026#39;); setTimeout(NProgress.done, 500) enableCommentButton(); return false; }, success: function(data) { if (!$(selector.commentList, data).length) { errorMsg = data.match(/.+/g).join().match(/\\\u0026lt;div.+\\\u0026gt;.+\\\u0026lt;\\/div\\\u0026gt;/g).join().match(/[^\\,]+/g); $msg.html(errorMsg[0] + errorMsg[1] + errorMsg[2]); enableCommentButton(); return false; } else { userCommentId = $(selector.commentList, data).html().match(/id=\\\u0026#34;?comment-\\d+/g).join().match(/\\d+/g).sort(function(a, b) { return a - b; }).pop(); commentLi = \u0026#39;\u0026lt;li id=\u0026#34;comment-\u0026#39; + userCommentId + \u0026#39;\u0026#34; class=\u0026#34;comment\u0026#34;\u0026gt;\u0026#39; + $(\u0026#39;#comment-\u0026#39; + userCommentId, data).html(); + \u0026#39;\u0026lt;\\/li\u0026gt;\u0026#39;; if (parentId) { if ($(\u0026#39;#\u0026#39; + parentId).find(\u0026#34;.comment-children\u0026#34;).length \u0026lt;= 0) { $(\u0026#39;#\u0026#39; + parentId).append(\u0026#34;\u0026lt;ul class=\u0026#39;children\u0026#39;\u0026gt;\u0026lt;/ul\u0026gt;\u0026#34;); } $(\u0026#39;#\u0026#39; + parentId + \u0026#34; .children:first\u0026#34;).append(commentLi); parentId = \u0026#39;\u0026#39; $body.animate({ scrollTop: $(\u0026#39;#comment-\u0026#39; + userCommentId).offset().top - 450 }, 900); } else { $(selector.commentList).prepend(commentLi) $body.animate({ scrollTop: $(\u0026#39;#comment-\u0026#39; + userCommentId).offset().top - 200 }, 900); } //$(\u0026#39;#comment-\u0026#39; + userCommentId).slideDown(\u0026#39;slow\u0026#39;); //console.log(userCommentId); $(selector.commentNumText).length ? (n = parseInt($(selector.commentNumText).text().match(/\\d+/)), $(selector.commentNumText).html($(selector.commentNumText).html().replace(n, n + 1))) : 0; TypechoComment.cancelReply(); $(selector.submitTextarea).val(\u0026#39;\u0026#39;); $(selector.commentReplyButton + \u0026#39; b, #cancel-comment-reply-link\u0026#39;).unbind(\u0026#39;click\u0026#39;); bindCommentReplyButton(); enableCommentButton(); } } }); return false; }); function bindCommentReplyButton() { $(document).on(\u0026#39;click\u0026#39;, selector.commentReplyButton, function() { parentId = $(this).parents(\u0026#39;li.comment\u0026#39;).attr(\u0026#34;id\u0026#34;); $(selector.submitTextarea).focus(); }); $(document).on(\u0026#39;click\u0026#39;, \u0026#39;#cancel-comment-reply-link\u0026#39;, function() { parentId = \u0026#39;\u0026#39;; }); } function enableCommentButton() { $(selector.submitButton).attr(\u0026#39;disabled\u0026#39;, false).fadeTo(\u0026#39;\u0026#39;, 1); $(selector.submitButton).val(\u0026#39;发射=A=\u0026#39;); } function message(msg) { $msg.hide(); $msg.html(msg).slideToggle(\u0026#39;fast\u0026#39;); } } 无限嵌套评论 1 2 3 4 function themeInit($archive) { Helper::options()-\u0026gt;commentsMaxNestingLevels = 999; } ","date":"2024-08-28T21:35:54+08:00","permalink":"https://brume.top/p/a-final-gaze-at-typecho/","title":"对 Typecho 最后的凝望"},{"content":"在8月下旬，暑假结束前的几周时间，我的空余时间变多了，精力也充沛了不少，悠闲得很。我闲来无聊，去翻翻自己的博客，发现大陆的防火墙禁用了通过 http 协议访问 *.eu.org 域名的方式，随即在腾讯云上注册了这个新域名，brume.top。我觉得既然注册了新域名，倒不如把全站一并更新吧。于是在网络上到处搜索 Typecho 主题，但鲜有满意的。我以前也想过自己写出自己满意的主题，遗憾的是眼高手低，页面布局属实稀烂，自己都看不下去。我便产生了想放弃 Typecho 的想法。在逛了无数个自己收藏的博客之后，我选择了 hugo 。\n世界上最快的网站构建框架———— Hugo 是最受欢迎的开源静态站点生成器之一。凭借其惊人的速度和灵活性，Hugo 让构建网站再次变得有趣。\n翻译自 hugo 官网\nHugo 和 Typecho 大相径庭。它们是静态网站生成器和动态博客平台的典型代表。它们各有优劣。（下文部分由 AI 总结，并根据我的真实感受撰写成文）\n速率方面 Hugo：这是 Hugo 最引以为豪的一点。作为静态网站生成器，Hugo 在性能方面是属于碾压 Typecho 的存在。Hugo 生成的站点是纯静态的 HTML 文件，访问者在浏览网站时完全不需要进行动态内容的生成和前后端的交互，加载速度非常快。 Typecho：Typecho 在这方面稍微逊色，作为一个基于 PHP 和 MySQL 的动态博客系统，它的每次访问都会需要从数据库读取数据，并生成相应的页面。对于小型的个人博客站点，抛开加载图片或字体等资源不谈，它们之间访问速率的差异很小，基本可以忽略不计。 维护方面 Hugo：Hugo 生成静态页面后，不需要服务器支持 PHP 或数据库，直接部署即可。一般情况下，在部署后，网站不需要任何后台维护，只需使用静态服务器来托管即可。常见的托管服务的提供商有 GitHub Pages, Netlify, Vercel 等。在 Hugo 的文档中也有提及。 Typecho：需要服务器支持 PHP 和数据库，因此在使用过程中涉及服务器环境的配置和维护。需要定期对服务器环境和数据库进行备份和更新。我之前就曾经发生过误删除数据库的事情。防患于未然的不二法门就是定期备份数据库。 可扩展性方面 Hugo：Hugo 本质上是一个生成静态网站的工具，因此对动态插件的支持比较有限。整体来说不如动态博客系统那样灵活。 Typecho：Typecho 支持通过插件扩展功能。但如果将 Typecho 和其他主流的动态博客系统相比，它的插件生态相对较小，选择有限。 开发效率方面 Hugo：Hugo 使用 Go 语言开发，生成网站速度非常快。网站的开发和生成流程也相对自动化，基于配置文件和 Markdown 语法，简单高效。 Typecho：Typecho 安装和配置比 Hugo 简单多了，但作为动态网站系统，日常运营过程中需要处理服务器和数据库相关的问题，Hugo 就不会出现这样的顾虑。 SEO 友好方面 Hugo：Hugo 本身作为静态网站生成器，所有页面都是预生成的，SEO 友好，加载速度快，对搜索引擎友好。另外，由于没有动态生成的网页，Hugo 在访问控制方面比较困难。它一般依赖于 CDN、反向代理或自定义前端实现访问控制。 Typecho：Typecho 可以通过插件或自定义开发支持更多的访问控制、权限管理等功能。此外，动态内容有助于实现一些基于用户行为的功能，比如个性化推荐和用户登录系统。 安全性方面 Hugo：因为生成的是静态页面，没有后台和数据库的存在，因此几乎不存在被攻击的风险，安全性极高。 Typecho：由于是动态系统，存在 PHP 代码执行、数据库操作等，需要注意服务器和程序的安全更新。此外，如果插件质量不佳，可能带来安全隐患。 学习曲线方面 Hugo：尽管生成静态网站相对简单，但 Hugo 的学习曲线可能会有一些陡峭，尤其是在部署、主题定制、短代码使用和一些高级功能的配置上。 Typecho：Typecho 的管理界面和功能比较直观，对小白友好，基本不需要深入了解代码即可搭建和管理网站。 内容管理方面 Hugo：Hugo 通过 Markdown 文件来管理内容，编辑文章需要在本地进行，编辑和发布内容需要通过 Git 等工具进行管理，适合开发者或技术爱好者。 Typecho：Typecho 提供了后台管理系统，支持直接在浏览器中编辑、发布和管理文章，操作方便，适合非技术用户或习惯于动态博客系统的用户。 总结 在以下几个方面，Hugo 相比 Typecho 存在优势：\n性能：动态网站速度较慢，尤其在流量大时。 维护复杂性：依赖 PHP 和数据库，服务器配置与维护需要更多工作。 扩展性（插件支持较弱）：虽然支持插件，但生态不如主流动态系统丰富。 安全性：由于动态性，安全风险比静态生成器更大。 ","date":"2024-08-28T20:35:54+08:00","image":"https://img.brume.top/file/0a665c213503e3f8d2d41.png","permalink":"https://brume.top/p/a-comparison-between-typecho-and-hugo/","title":"Hugo与Typecho之对比"},{"content":"前段时间，我校举行了一次赴湖南的研学旅行，共历时五天。在此期间，我们往返于长沙、韶山两地，流连于乡村、城市之间，见证传统文化和现代社会的融合与碰撞，闲步湖湘，展望未来。\nDay 1：束装就道 当天中午，整个年级的学生、带队老师及相关人员坐大巴前往深圳北站，乘坐高铁去长沙。到达北站的时间将近十二点半。天气很好，不算炎热，是南方少有的。 △深圳北站远景\n在一个多小时的候车之后，我们一行终于坐上了高铁。复兴号的涂装非常亮眼，充满了现代科技感。由此不难观之，学校在出行方面充分照顾了学生，选择高铁而不是绿皮火车，学生有了更加良好的出行体验，节约了更多时间，也见证了我们国家这一领域的发展，可谓一举多得。\n登车前我边走路边拍了几张列车的图片，上面的两张是比较清楚的。\n上车后，我坐在窗边，欣赏窗外的风景。从珠江下游的冲积平原到粤北喀斯特地貌，从湘南丘陵到湘北平原，沿途的美景是不够看的。\n在行经广州北面时，天空下起了雨。烟雨蒙蒙中，望着远方的河岸和江上的驳船，竟真有点身处江南水乡的感觉了。 之后，我们经停韶关、郴州、衡阳等地，到达长沙南站。一共花费约三个半小时到长沙。 在长沙南站附近上大巴。我有幸坐在最前排，这里是看风景最好的位置之一。之后，我们前去用餐，夜渡浏阳河，在邻近黄花机场的一家酒店下榻。第一天的旅程结束。\nDay 2：熔古铸今 回长沙城区。上午先去湖南省博物馆。湖南省博物馆收藏了大量出土于马王堆汉墓的文物。在三楼，我们观看了墓坑侧壁上每半小时进行一次的灯光演出。光与影在深达十余米墓穴的侧壁上游动，幻化出各种当时的服饰、帛书上具有祥瑞寓意的图案，有一种宗教般的庄肃、神秘之感，给人以若隐若显的威慑力。\n下图是一张表演前墓坑的图。可以参考看台上的人，用你们初中学过的三角形相似的相关知识估计它的深度。\n另外，马王堆汉墓出土的素纱襌衣、装殓辛追夫人的棺椁等文物也很有名。这里就不赘述了。\n下午，我们一行跨过湘江，前往湖南大学、岳麓书院、爱晚亭等地参观。有着“千年学府”之称的湖南大学人文气息浓厚，周围环境幽雅，是读书求学之佳处。校门口也有衣着像是本校的大学生正在拍摄合照，给学府增添了青春的气韵。 随后，我们走进岳麓书院。古木参天，高山流水。这里的每一块碑刻、每一幢古建都昭示着湖湘文化深厚的底蕴。身处古代书院的楼宇间，我们得以与古代先贤共情，深刻体会到了“惟楚有材，于斯为盛”的盛况。\n从书院屈子祠向北上山，不远处就是爱晚亭。唐伯虎有一首诗提到过爱晚亭。可惜现代人在斯处似乎难以体会到那时唐寅悠然自得的意境了。\n我画蓝江水悠悠，爱晚亭上枫叶愁。 秋月溶溶照佛寺，香烟袅袅绕经楼。\n随后原路返回，去太平老街实地考察（实际上是自由购物）。虽说它作为“长沙古城保留原有街巷格局最完整的一条街”，但也没能克服商品化、同质化的弊病，少了许多人文气息，逛来索然无味，以至于旁边的贾谊故居都显得格格不入了。 不过话说回来，太平老街的“黑色经典”臭豆腐确实挺好吃的，价格也比较亲民。\n在太平老街自由活动期间，我前去体验了长沙的轨道交通。地铁站台和深圳地铁别无二致，但深圳地铁列车内的配置，比如显示屏、报站、车站卫生等，优于长沙地铁。 Day 3：躬耕乐道 从长沙去韶山。经过约三个小时的车程，到达位于黄田村的研学实践基地，和领队的农户会面，之后去水田捕鱼、插秧，随后前往农家就餐。\n黄田村的环境优美，路边遇到了某不知名的野花。 下午，先去韶山毛主席纪念馆，了解毛主席领导中国人民完成反帝反封建的历史任务、建立新中国、发展社会主义的光辉历史。随后前往伟人故居。故居环境很好，门前半亩荷塘，有着“重湖叠巘清嘉”之感。 在附近，我还偶遇了我的两名初中同学，他们也在参加研学活动，现在均在另外一所高中就读。我们聊了一下自己一年来的学习和生活，以及进入人生新阶段后的新变化。最后合影留念，尽欢而别。\n晚饭后，在韶山当地观看大型实景演出《中国出了个毛泽东》。我们坐在高台上观看。演出的场地非常开阔，我打开手机的地图应用，竟然发现在卫星地图上也能清晰地看出像中国地图一样的板块。现场实景如下图所示。演出的灯盏光彩溢目，很是让人震撼。 晚上住宿在灰汤的一家酒店。\nDay 4：兴我民族 经过两个多小时的车程，返回长沙。上午参观了第一师范，毛主席的母校。下午去橘子洲。\n橘子洲位于湘江之上，狭长形状。东西窄，南北宽。我们从橘子洲北面乘小火车，一路向南，到达橘子洲头。学校计划让全年级师生在橘子洲头的广场上拍一张大合照。我们班来得较早，还有空余时间，我就与同学在岸边闲逛。湘江这段流速较缓，水面较宽。站在江边看江水南下、百舸争流，也不失为一种乐趣。 北宋词人张孝祥有词赞曰：\n濯足夜滩急，晞发北风凉。吴山楚泽行遍，只欠到潇湘。买得扁舟归去，此事天公付我，六月下沧浪。蝉蜕尘埃外，蝶梦水云乡。\n制荷衣，纫兰佩，把琼芳。湘妃起舞一笑，抚瑟奏清商。唤起九歌忠愤，拂拭三闾文字，还与日争光。莫遣儿辈觉，此乐未渠央。\n我很喜欢这首词中带有的那种在苏轼的阔达豪迈和李清照的清新雅逸词风之间的，清高闲远的意境。\n在拍摄完合照之后，我们前往北面的毛主席青年艺术雕像。雕塑目光如炬，恰似主席“指点江山，激扬文字”的气概。 晚些时候，我们又回到韶山附近，开篝火晚会。篝火晚会的烟花还是令人激动的，打破了黑夜的岑寂。\n由于我不会唱歌，所以我没有报名班级合唱表演。但是在我们班表演的时候，我的几个好哥们把我抬上了舞台。这一幕被我在电视台担任职务的同学看到，拍摄了下来，作为活动的一个“花絮”，放到了电视台的节目上。我也算是在全校出名了。\nDay 5：归去来兮 上午参观袁隆平水稻博物馆，下午坐上高铁，傍晚时分返回深圳。\n在高铁上见证了中国列车的速度 返回时列车停站较少，因此三个小时就到了北站。在北站附近就地解散，研学旅行圆满结束。\n结语 在此次研学活动中，我们学到了文化、学到了历史、学到了传承。今朝，正值盛世繁华，置身于“百年未有之大变局”的壮阔时代洪流，我们幸运地拥有了前所未有的广阔视野，得以屹立于历史的巅峰，眺望那遥不可及的璀璨未来。民族复兴的壮丽画卷，在眼前缓缓铺展，既振奋人心，又催人奋进。\n因此，作为新知识的集大成者、新思想的探索者、新时代的弄潮儿，我们的肩上自然而然地承载起了一份沉甸甸的神圣使命。“多少事，从来急；天地转，光阴迫。”作为国家之未来、民族之希望所在，我们深知责任之重大，使命之光荣。我们誓将以中国独有的智慧之光芒、创新之方案、坚定之行动，去勾勒并塑造一个更加美好的世界的明天，让中国声音响彻全球，让世界因我们青年一代而更加精彩！ ","date":"2024-07-06T00:00:00Z","image":"https://dongli.pages.dev/file/1f6893647f31558236123.jpg","permalink":"https://brume.top/p/a-trip-to-changsha/","title":"“蝉蜕尘埃外，蝶梦水云乡”"},{"content":"期末考试结束后，高中的第一个学期告一段落。2024年的第一个月也将要过完。过去的2023年过得实在不算精彩——毕竟“世事一场大梦，人生几度秋凉”。对我个人而言，2023年是充满挑战和机遇的一年。\n代码如诗 这句话是我在 WordPress 官网上读到的。英文版作\u0026quot;Code is poetry.\u0026quot;\n诚然如是，我也时常把代码视作是诗篇。\n2023年，我在Github上的贡献次数为16次，贡献主要集中在暑假期间，毕竟这一时期空余时间较多。\n2023年初，或许是因为 Typecho 的轻量高效的优点吸引了我，我把我的博客从 WordPress 彻底迁移到了 Typecho ，接着就在这片沃土之中扎根下来，耕耘这片互联网上的小圈子。虽然初春之时的手残删库让建站前期的一些数据丢失，但总的来说，这个博客的生命还在。\n我曾设想过自己因为学业的缘故无暇顾及博客，因而开发了一款名为 SiteMaintenance 的插件，用来显示关闭站点的页面。虽然我最后放弃了长期将站点“关闭”的想法，但插件本身毕竟还是一个奇妙的创意，因此我将它上传到了 Github 上。颇具喜感的是，这个55行代码的小可爱，迄今也已经收获了7stars。\n另外，2023年寒假，我还创作了一个名为“癸卯工程”的游戏，它通过再现校园的风景，以纪念我们在学校的屈指三年。同学们挺喜欢这款游戏，时常下课去玩。它也随着升学，一路火到了高中。\n大概在去年11月底、12月初的时候，我了解到了申请各类 SSL 证书的底层逻辑。虽说各大厂商的控制面板大多数已经支持申请诸如 Let\u0026rsquo;s Encrypt , Zerossl 之类的免费 SSL 证书，但一些小厂提供的面板（比如我这个大可爱用的）就没有这一功能，于是我上网搜集资料和源码，并将其整合，计划做出一个 SSL 证书的签发平台。在我完成这个项目后，我同样打算将代码开源。\n2023年，在代码领域，我算是比2022年有所长进。我将部分空余时间利用起来学习代码，也在掘金上看过很多程序员的经历，感触颇深。总之，2023年对我未来的生涯规划和职业选择具有深远影响。\n剑吼西风 2023年，又阅读了许多诗书。现在看来，让我感触最深的当属贺方回老先生的《六州歌头》：\n少年侠气，交结五都雄。肝胆洞，毛发耸。立谈中，死生同，一诺千金重。推翘勇，矜豪纵，轻盖拥，联飞鞚，斗城东。轰饮酒垆，春色浮寒瓮，吸海垂虹。闲呼鹰嗾犬，白羽摘雕弓，狡穴俄空。乐匆匆。 似黄粱梦，辞丹凤；明月共，漾孤篷。官冗从，怀倥偬，落尘笼，簿书丛。鹖弁如云众，供粗用，忽奇功。笳鼓动，渔阳弄，思悲翁。不请长缨，系取天骄种，剑吼西风。恨登山临水，手寄七弦桐，目送归鸿。\n这首词写的是贺铸老来回忆自己年少时的经历。想当年，他推翘勇矜豪纵轻盖拥联飞鞚斗城东轰饮酒垆。这是何等豪放！可叹浮生如梦，白衣苍狗。人间忽晚，他到老也只做得一个小官，是“官冗从，怀倥偬，落尘笼，簿书丛”。更令人扼腕叹息之处在于，山河破碎，他是乱世中的平凡人中的一员。若连生命都难保于乱世，又何谈修身齐家治国平天下？他是报国无门。\n读完这首词，我自己感慨万千。一年来，我经历了太多难以预料之事（或许再过几年看看也不过如此）。依稀记得23年初写过一套语文阅读理解题目，文章讲最初“像一块棱角分明的石头”的主人公在走上社会十余年后，被“打磨”成像“一块鹅卵石”的经历。当时的我下课时嘲讽这篇文章的作者，信誓旦旦地给同学说，自己永远不会像这个文章的主人公一样窝囊废，自己最多只会被“打磨”成一个“等边三角形”。\n可是一年后呢？我想，现在的自己既不是一块“鹅卵石”，也不是一个“等边三角形”，但以后呢？这还真不好说。\n我又想到了吴湖帆先生的次韵之作。\n废兴一例，今昔几英雄？玄理洞，头角耸。劫磨中，苦心同，木铎人争重。何神勇，资天纵。朱旆拥，青丝鞚，逞西东。谈笑偃时，颓玉沈香瓮，咳唾腾虹。慨胡沙黩武，力尽铁胎弓，喘息横空。却匆匆！ 破江山梦、凌霄凤、鱼鳖共、浪飘篷。拚傔从，行倥偬，孰牢笼，散林丛。激厉情和众，为谁用？莫称功。枢宇动，雷云弄，渐成翁。若个天骄，自是炎黄种，顾盼生风。更相思千里，按剑击焦桐，北燕南鸿。\n我有一位良师曾在他的一次演讲中，向同学喊出一句口号**“少年应有鸿鹄志，当骑骏马踏平川”**。诚然，一个人最美好的年纪、他/她的少壮年华，就在少年。我进入高中以后，因办事两次返回故校。每次去时，时间都较晚，但依旧能看到一些学生在校内玩耍、逗留。我有时对他们拥有大把空余时间而钦羡，有时却又对他们肆意挥霍青春的态度而惋惜。或许人越长大，其懂得的道理就越多吧。\n如果以自己宣誓入团（2023年5月）为界，把自己的人生阶段一分为二，那我觉得我的少年时期与贺铸还是相若的。少年时期，也曾意气风发，也曾心胸坦荡、也曾才情出众。少年壮志，也曾我武惟扬，也曾意志坚定，也曾百折不回。然而时光匆匆，年少轻狂转瞬成为过往，令人感慨光阴的流逝之快。新环境里，自己一心追求上进，饱尝光荣抑或是屈辱。尽管身负才华与理想，但行动上却常常仓促匆忙。我已厌倦了世俗的纷扰，羡慕自由自在。珠玉在侧，觉我形秽。现在看来，自己一直都是一名再平凡不过的人，竟有些怀疑自身是否还能再次创造出曾经那样的功绩。\n2023年，有人称之为“AI元年”。世界依旧处在百年未有之大变局中，终于意识到自己只是人类的八十亿分之一罢了。在现实与梦想的矛盾冲突下，回想起当初年少时的雄心壮志，自比昆仑之种，面对浩荡西风。如今虽心有不甘，但愿能有辛幼安“乘风好去，长空万里，直下看山河”的壮志情怀，乘风而去，登临送目，看着漫山遍野的梧桐，眺望远方的归鸿，“剑吼西风”。\n文字和诗 初看这个标题，内容似乎和“剑吼西风”无异。其实不然。\n我或许也算是一个文学类博主。\n2023年初的一次考试中，作文是材料作文，也是半命题作文。那时的我学习压力陡增，身旁的同学也如此。\n后来老师拿了几篇市教研员选出来的优秀作文，我最欣赏的作文是如下两篇。（文章作者尚不清楚，符合《中华人民共和国著作权法》第二十四条第一、二款之规定）\n读完作文，我的心中充满感慨。文字是有力量的，是能传递情感的，是指引我们前进的方向的。不管怎么说，它终究是让我“重燃薪火誓穹苍”了。每当我再衰三竭之时，我总是去读曾经那段峥嵘岁月中的文章，它总是给人以希望。\n年近岁除之时，作为学校的代表之一，参加了区作文比赛，并取得佳绩。这也算是学友们的作文给我的灵感吧。\n开学不久学习诗歌之际，老师布置了写诗的作业，我写了数首诗，还有一首是仿写顾城《一代人》的，因为太短，它没有写进随笔本。但这首诗恰好契合这段短文的主旨。\n在黑暗中我们寻求光明，在痛苦中我们看到希望，在失败中我们汲取力量。\n“路虽远，行则将至；事虽难，做则必成”。在黑暗抑或是光明的日子里、在希望抑或是痛苦的日子里、在失败抑或是成功的日子里，无论如何，干就完了。毕竟，实干，才是民族复兴的唯一要素。\n也要时刻感受笔尖回响。\n平凡抑或是伟大 2023年，我曾在自己的知识库中记下这样一句话：\n“没有人会囿于伟大，也没有人会甘于平凡”\n以前一直觉得自己好像足够优秀，殊不知是初中学校太菜，自己的眼界太狭小了。一路走来的过程，就是跟越来越多智者同行、被越来越多同龄人打败的认识自我的过程。\n**只能说以前的虚假的优势或者说借口，随着时间发展，眼界的开阔，便渐渐消失了。 **\n在我看来，新的一年，要少一点功利心，多一些责任心、实干心。\n又想到了很早以前很火的一部电影，里面有这样一首诗：\n我的孩子\n如果可以\n我想告诉你\n世间的一切奥秘\n告诉你山川大河，日升月落\n光荣与梦想，挫折与悲伤\n告诉你\n燃料是点燃自己\n照亮别人的东西\n火箭是为了梦想\n抛弃自己的东西\n生命是用来燃烧的东西\n死亡是验证生命的东西\n宇宙是让死亡变得渺小的东西\n渺小的尘埃\n是宇宙的开始\n平凡的渺小\n是伟大的开始\n而你\n我的孩子\n是让平凡的我\n想创造新世界的开始\n如上图，这首诗被改编成深圳2021年末的中考适应性考试语文作文的材料，或许也是2022年“是你，让我超越了平常的自己”的作文题目的来源之一。\n在新时代的大背景下长大的新一代的中国青年，是中国特色社会主义制度建设过程的亲历者。时代在变，市场的大潮在变，年轻人的奋斗姿态也在变。一代人有一代人的挑战，一代人也有一代人的追求。我们面对的是新科技的浪潮，面对的是大变革的环境，我们渴望更美好的未来、向往更丰盈的生命。\n诚然，没有人会囿于伟大，也没有人会甘于平凡。只有个体把平凡的生活过得有意义、有价值，才能拥有追求更高境界的动力和勇气。\n小站新篇 又是新的一年，也换了一个新主题。从 default theme 到 matcha，从 Mydiary 到** Jasmine **。我从前曾设想过自己这一款主题，也不知何时能把这未竟之业做成。\n写在最后 相信关注我的朋友也发现了我把Github上的用户名更改成了“Zephyr Easton”。这是我在2023年给自己新取的英文名。而“Zephyr”就来源于上文的“剑吼西风”之意。\n总之，前景可待，未来可期。2023年，遇见了千百倍优秀于自己的同学，也从他们身上汲取到了新时代中国青年最难得的意志品质。\n这种意志，当然也并不是寸丝半粟——它体现在年轻一代眼中闪烁出的坚定里，熔铸在他们为事业拼搏、为梦想力行的决心里，彰显在他们的言辞、他们的气度、他们的胸襟里……\n我们何其有幸与这个伟大的社会主义祖国同生，何其有幸与这个新时代同频共振！\n既如此，我也没什么好说的了：\n二零二四，凌云壮志\n","date":"2024-01-31T00:00:00Z","permalink":"https://brume.top/p/a-look-back-at-2023/","title":"二零二四，凌云壮志"},{"content":"博客已经平稳运行一年了，想想就让人激动！在建站一周年的时间节点上，抚今溯往，思如潮浪。感慨万千，乃志以彰。\n这篇文章我已经构思许久，在我打草稿的时候，我曾数次想到了标题“漫漫长梦”。人生如梦。我想，它象征着我对人生的思考和哲学的追寻，也映射出无数人追求真理和发现人生意义的漫长旅程。 《Hello World》\n春树暮云博客是我心灵的寄托，从 22 年末以来，我在这里与读者们分享自己的探索和收获。从我的文字中，不难看出，人生就如同一场漫长的梦，无论是高中、大学还是日后走进社会，我们都将在不同的阶段中筑梦、逐梦。停下来意味着重新思考和重新定位，让不才暮云能够更好地专注于未来的探索。 《漫漫长梦》\n回首过去，饱尝光荣屈辱，遍沐春风雪霜。我明白人生是一段漫长而复杂的旅程。正因如此，我对自己加以要求，要勇敢追随自己的梦想，并且无畏地破茧而出。别让不确定性吓到自己，因为正是不确定性激发了我们的潜力。 《确定性和不确定性》\n当我们在拨开人生的迷雾时，我们会遇到无数的疑问和挑战。我们会跌倒，受伤，但也会重新站起来。这正是人生的真谛所在，一段伟大而真实的人生需要经历坎坷与起伏，方能演绎出奇迹。我想，或许渺小的人类也可以透过写作，完成生命的伟大和壮阔。 《重新开始》\n一年之期只是博客之新起点，但我的探索和思考永未结束。我将努力应对新的挑战，迎接新的机遇，积累新的知识和经验。我希望在一段时间后，能够带着更丰富的见解回到这里，与你们再次相遇。\n最后，我想感谢博客每一个读者，你们的支持鼓励是我前进的动力。请记得，即使博客的更新时断时续，但心灵的探索和思考永不停息。让我们一同追随“漫漫长梦”，探索人生的深藏哲理。“把酒祝东风，且共从容！”\n衷心地向你们致意\n暮云君\n2023年12月31日于 Dreamland\n","date":"2023-12-31T00:00:00Z","image":"https://dongli.pages.dev/file/74beaf2497a1c52909704.jpg","permalink":"https://brume.top/p/long-dreams/","title":"漫漫长梦"},{"content":"这是在今天开学考试后，总结自己让春树暮云适配PWA的一段经历和教程。枯燥无味\n什么是PWA PWA（Progressive Web App）是一种用于开发Web应用程序的技术和方法。PWA结合了传统的Web应用程序和原生移动应用程序的最佳特性，旨在提供更好的用户体验。\nPWA可以通过浏览器访问，不需要安装在设备上，但它们具有类似原生应用程序的功能和特性。PWA利用Web浏览器提供的API，如 Service Workers 和 Web App Manifest 等，使应用程序可以脱机工作、推送通知，并添加到主屏幕。这些特性使得PWA可以在不同平台和设备上以一致的方式运行，并且无需从应用商店下载和安装。\n深入了解 PWA\n检查浏览器是否支持PWA 我建议在 caniuse.com 上查询某浏览器是否支持 PWA 网页链接\n打开网站后页面大概长这样▽ 网站适配PWA 简单来说，网站适配PWA大概分以下几个步骤。\n全站https化 编写 manifest.json 和 sw.js 准备 192×192px 的应用图标和 512×512px 的应用图标 在网站相关页面引入 manifest.json 文件和 sw.js 文件 接下来是自己的实操。\nmanifest.json 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 { \u0026#34;name\u0026#34;: \u0026#34;春树暮云\u0026#34;, // 用于安装横幅和启动画面显示的名称 \u0026#34;short_name\u0026#34;: \u0026#34;春树暮云\u0026#34;, // 不为空时,为桌面PWA应用程序的名称 \u0026#34;theme_color\u0026#34;: \u0026#34;#f6ffff\u0026#34;, // 主题色 \u0026#34;background_color\u0026#34;: \u0026#34;#f6ffff\u0026#34;, // 背景色 \u0026#34;display\u0026#34;: \u0026#34;fullscreen\u0026#34;, // 启动过渡动画, standalone或fullscreen \u0026#34;scope\u0026#34;: \u0026#34;/\u0026#34;, \u0026#34;start_url\u0026#34;: \u0026#34;/\u0026#34;, //启动页面 \u0026#34;icons\u0026#34;: [ { \u0026#34;src\u0026#34;: \u0026#34;192.png\u0026#34;, //根据自己图标的路径改写，下同 \u0026#34;sizes\u0026#34;: \u0026#34;192x192\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image/png\u0026#34;, }, { \u0026#34;src\u0026#34;: \u0026#34;512.png\u0026#34;, \u0026#34;sizes\u0026#34;: \u0026#34;512x512\u0026#34;, \u0026#34;type\u0026#34;: \u0026#34;image/png\u0026#34; } ], 上面的代码可以根据实际情况，进行对应更改。\n###sw.js###\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 \u0026#39;use strict\u0026#39; //声明整个脚本处于严格模式 const cacheName = \u0026#39;PWA-cache\u0026#39;; // 缓存名字 const startPage = \u0026#39;https://example.com\u0026#39;; // 首页地址 const offlinePage = \u0026#39;https://example.com\u0026#39;;// 离线首页地址 const filesToCache = [startPage, offlinePage]; const neverCacheUrls = [/admin/];//从不缓存的目录，如typecho中的\u0026#34;admin\u0026#34;文件夹 self.addEventListener(\u0026#39;install\u0026#39;, function(e) { console.log(\u0026#39;Cache event!\u0026#39;) e.waitUntil( // 安装时，对需要缓存的文件进行缓存 caches.open(cacheStorageKey).then(function(cache) { console.log(\u0026#39;Adding to Cache:\u0026#39;, cacheList) return cache.addAll(cacheList) }).then(function() { console.log(\u0026#39;Skip waiting!\u0026#39;) return self.skipWaiting() }) ) }) self.addEventListener(\u0026#39;activate\u0026#39;, function(e) { // 判断地址是不是需要实时去请求，是就继续发送请求 console.log(\u0026#39;Activate event\u0026#39;) e.waitUntil( Promise.all( caches.keys().then(cacheNames =\u0026gt; { return cacheNames.map(name =\u0026gt; { if (name !== cacheStorageKey) { return caches.delete(name) } }) }) ).then(() =\u0026gt; { console.log(\u0026#39;Clients claims.\u0026#39;) return self.clients.claim() }) ) }) self.addEventListener(\u0026#39;fetch\u0026#39;, function(e) { // 匹配到缓存资源，就从缓存中返回数据 e.respondWith( caches.match(e.request).then(function(response) { if (response != null) { console.log(\u0026#39;Using cache for:\u0026#39;, e.request.url) return response } console.log(\u0026#39;Fallback to fetch:\u0026#39;, e.request.url) return fetch(e.request.url) }) ) }) ###引入文件### 在\u0026lt;head\u0026gt;标签中引入 manifest.json\n1 \u0026lt;link rel=\u0026#34;manifest\u0026#34; href=\u0026#34;manifest.json\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; /\u0026gt; 然后，在\u0026lt;body\u0026gt;标签中判断是否注册了serviceWorker\n1 2 3 4 5 6 7 8 9 10 \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; if (navigator.serviceWorker != null) { navigator.serviceWorker.register(\u0026#39;sw.js\u0026#39;) .then(function(registration) { console.log(\u0026#39;Registered events at scope: \u0026#39;, registration.scope); }).catch(function(err) { console.log(\u0026#39;Registered events at fail: \u0026#39;, err); }); } \u0026lt;/script\u0026gt; 此时，PWA已经适配完成了。\n但是，在 typecho 或 wordpress 等博客系统中，容易产生因各类原因造成的适配不成功的情况。此时，可以选择引导用户手动配置PWA，例如，通过点击按钮配置PWA。\n代码如下：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \u0026lt;script\u0026gt; var deferredPrompt = null; // 判断用户是否安装此应用：beforeinstallprompt,如果用户已经安装过了,那么该事件不会再次触发 // 需要卸载，然后重新打开浏览器才能再次触发 window.addEventListener(\u0026#34;beforeinstallprompt\u0026#34;, e =\u0026gt; { e.preventDefault(); deferredPrompt = e; }); // 安装完成后触发,即点击安装弹窗中的“安装”后被触发 window.addEventListener(\u0026#34;appinstalled\u0026#34;, () =\u0026gt; { deferredPrompt = null; }); function addToDesktop() { // 调用prompt()方法触发安装弹窗 deferredPrompt.prompt(); deferredPrompt = null; } \u0026lt;/script\u0026gt; \u0026lt;button onclick=\u0026#34;addToDesktop()\u0026#34;\u0026gt;点击安装PWA\u0026lt;/button\u0026gt; 演示如下： 因更换博客系统，此链接已失效，以后有时间会尝试为本站配置PWA\n最后，为避免兼容问题，建议在部署PWA时，将 manifest.json和 sw.js 文件置于网站根目录下。\n","date":"2023-08-18T00:00:00Z","image":"https://dongli.pages.dev/file/182760af93f035e9f2c31.jpg","permalink":"https://brume.top/p/web-2-pwa/","title":"Web 2 Pwa"},{"content":" The mighty desert is burning for the love of a blade of grass who shakes her head and laughs and flies away.\nStray Birds\n今天下午，我从学校回家。回程的车上人满为患，我和一位同学并排坐着。他到站时，我侧过身让他通过。临走时，他问我，“你是不是之前在台上演讲的那位同学？”我点了点头。由于之前那次关于哲学的演讲比较成功，许多新生都认识我，而我却叫不上他们的名字。这已经不是我第一次遇到这种情况了。下车后，我和一名朋友同行，心中一直在思考一个问题：我的演讲是如何起步的？为什么能取得成功？\n在初中，我的第一次正式演讲是在2022年5月。那次演讲的成功带有一定的偶然性，但也为我之后的演讲奠定了基础。恰逢共青团成立一百周年，班主任选定我作为升旗仪式的演讲人。与老师讨论后，我选择了“追梦不负青春，奋斗不负时代”作为主题。这次国旗下的演讲引起了热烈反响。\n同年8月，年级推荐我在开学典礼上发言，鼓励同学们为实现青春目标努力奋斗。开学前几天，我来到学校做准备，正好遇到了新任年级主任。她听过我的上一次演讲，对我能力有信心，也对这次演讲提出了一些改进建议。但由于疫情原因，开学延期，演讲也被搁置。直到2022年12月，期中考试后，我们年级召开了一次线上大会，当天中午，我在校党员活动室和其他有关同学参与了视频录制，下午，年级大会上，我的演讲引起了大震动，班级里掌声和欢呼声不断，其他班级的同学也给了我很多鼓励。也许正是这几次成功的演讲，让更多志同道合的朋友认可了我的能力，在这个新的集体中，推荐我继续发言。\n第三次演讲较为低调，发生在今年2月新班级创建时。班主任和一些同学觉得开班应该有一个仪式，就推举我和班长一起发言。\n第四次演讲就是本文开头提到的那次。\n回顾起来，我的第一次演讲虽然是偶然的，但却为之后的一系列演讲铺平了道路。许多朋友认为，随着我不断努力，偶然性逐渐转变为必然性。这也意味着，在选人发言时，不确定性正逐渐变得单一，变得确定（当然，这只是朋友的一家之言，我相信高中的许多同学能力远高于我，他们也可能成为下一位被推举的人选，我对此有清楚的认识）。\n有时，我会向朋友抱怨，最近一个月要在公开场合做三次演讲，太累了；但有时，我又觉得自己很幸运，能够被老师、朋友们信任和认可。一个完全确定的世界是枯燥和乏味的；一个充满不确定性的世界是无常和恐怖的。问苍茫大地，何以调和？\n试深入思考这两个概念。\n不确定性给予我们机会去创新和进步。我们身处在一个未知的世界。当未来充满未知时，我们不再依赖过去之经验和既定之模式，不至于因循守旧，而是需要寻找新的方法、新的策略、新的机遇。正是在面对不确定性的时刻，我们才有机会挑战自己、超越自我，迎接新的机遇。\n从我自己的角度看，确定性和不确定性能为自己提供成长和发展的契机。正如上文所提到的演讲————在确定性的环境中，尽管我们的惰性是可怕的，我们可能会陷入舒适区，可能对新的经历和挑战缺乏动力……但是，在不确定的变革时刻，我们能够更加快速地适应新的环境和情况，就像我们离开曾经的集体，来到新的高中一样。我做个大胆的预言，这种适应能力完全能使我们变得更加独立和坚韧，肯定有助于提升我们个人的各个方面的技能！\n补充说明一点，从不确定性中吸取教训、积累经验，我们能够培养出更好的解决问题的能力。这些成长的机会能使我们更具竞争力，实现党和国家、社会所倡导的“全面发展”，为我们未来的事业做好准备。\n长远来看，确定性（抑或是不确定性），能完完全全地影响、改变一个人，**是个彻彻底底的伪命题！**每个人都是社会这张大网上的一个“节点”，每个人的成长和社会是分不开的！我的演讲之所以能够被大家认可，并不是因为确定性的缘故，而是因为自己在这一方面花了一些心思。推而广之，我校之所以取得一些成就，亦非“确定性”或“不确定性”所能完完全全决定的。\n“从来就没有什么救世主，也不靠神仙皇帝。要创造人类的幸福，全靠我们自己！”\n确定性或不确定性只能在个人成长中起促进作用，而最终的决定权掌握在我们自己手中。\n写到这里，感觉我身边的很多友人，在学习这方面或多或少地迷恋着“确定性”和“不确定性”。记得今年上半年，有个外省的同学，因讲座上的讲师发表不当言论，而将他的话筒夺去，并坚定地说出“学习是为了中华民族的伟大复兴”这句豪言壮语。我敬佩这位同学的大格局大视野大胸怀大境界。我们是新时代的中国青年。要让我们青年人眼里有诗和远方，这是做青年人的重大的责任！读书绝不仅仅是为了让自己认识几个英语单词或者数学符号，更重要的是培养博大的胸怀和宽广的格局！这些无关性格的温润或者粗犷，也无关于“确定”抑或是“不确定”！中国近代伟人中，主席、秋白、独秀、彭总……性格各异，但均为我中华民族中彪炳千秋的伟大人物。书中自有颜如玉，书中自有黄金屋，作为深圳市前百分之五的学生来讲，怎能格局太小，甚至不敢拿上桌面？青年人，应该从小就明白：读万卷圣贤书，行万里人生路！穷且益坚，不坠青云之志！往高处走，往宽处寻，往平处坐！近朱者赤，近墨者黑！学高为师，德高为范！读书不是为了以所谓“确定性”谋生，而是为了修身齐家治国平天下！读书更是为已立心，为友树榜，为家争光，为国桢干，为有能力替天下肇和平！\n在这个充满机遇与挑战的世界里，对于个人和社会来说，把握机遇是至关重要的。如何从容面对确定性和不确定性？如何把握机遇、应对挑战？这是我们每个人都需要思考的根本性问题。\n","date":"2023-08-10T00:00:00Z","image":"https://e7a23aee.dongli.pages.dev/file/2318bc833d140a44d2df0.jpg","permalink":"https://brume.top/p/certainty-and-uncertainty/","title":"确定性与不确定性"},{"content":" 近年来，AI技术的飞速发展已经深刻地改变了我们的生活方式。二维码作为一种快速、便捷的信息传递工具，也在全球范围内广泛应用。本文旨在探讨AI在二维码领域所带来的变革，并阐述其对人们生活的积极影响。\n提高二维码的识别速度和准确率 通过使用深度学习、图像处理等技术，AI可以快速地从复杂的背景中识别出二维码，并且可以纠正二维码的倾斜、模糊、遮挡等问题，从而提高识别效率和用户体验。（所以一些“花里胡哨”的二维码的潜力即将发挥出来）例如下面的这张图片： 拓宽应用领域 AI技术的引入为二维码的应用领域带来了巨大的拓展空间。通过AI算法，二维码可以与图片紧密融合，更加美观，具有了更大的发展空间。如qrbtf和quickqr这两个二维码平台，相继进军AI领域。通过AI生成的二维码，所得到的成品具有能从赛博空间中一窥现实的感觉。自以为，这将引起很多行业的一次大变革和大震动。这种新型的二维码，营造了一种梦幻般的超凡脱俗的界面，远胜过传统二维码所表现出的纷纷扰扰的现实之感。例如： （第一张图是我国的研发团队创作出的，暮云初敛，东方欲晓，白山黑水之间，廊腰缦回，檐牙高啄，充盈着诗情画意。第二张图由外国的一研发团队创作。将积木拼接而成的猫巧妙地融入图中，具有别具一格的美感。不得不说，这是AI的杰作。）\n促进商业创新 这个话题也是我和友人讨论过的，本文只探讨它的积极影响。AI技术在二维码领域的广泛应用对商业创新产生了积极的影响。从上两张图来看，二维码的智能化应用提供了新的商机和商业模式。\n(如果需要论证我的猜想，可以进行实验，通过分析被扫描的二维码的数据，帮助相关方了解消费者偏好，并进行精准营销和推广。)\n在我看来，二维码的创新激发了商业发展的潜力，为企业带来了更大的竞争优势。\n新型二维码对文化产业的影响 在本人看来，新型二维码将对文化产业带来**“颠覆性”**的巨大变革。将中华传统文化融入二维码中，有利于推动中华优秀传统文化的创造性转化、创新性发展。此外，AI生成的二维码也可以与二次元文化相结合，推动其新发展。 例如： △qrbtf官方制作的动漫风格的二维码\n△qrbtf官方制作的油画风格的二维码\n△qrbtf官方制作的青花瓷风格的二维码\nAI生成二维码的实现原理 利用相关软件生成一张二维码的图片。 通过Stable Diffusion将这张图片美化。 但看似简单，实际操作可能稍微麻烦。通常，Stable Diffusion对设备配置有较高要求，因此，相关开发者制作了Stable Diffusion 的网页版（使用共享GPU,功能受限），例如dreamstudio,huggingface spaces上的Stable Diffusion，qrbtf网站。\n###实操成品 △借助quickqr的discord机器人生成的猫\n△同样是quickqr的模型，较上一张稍显逊色，融合不够恰当、合理\n△huggingface的模型，是一座城市的鸟瞰图\n△huggingface生成的中世纪风格的古堡图片\n###后记 这篇文章写得拖沓，从7月10日开始写起，一直写写写写写了九天，直到7月18日终稿（也可能是自己最近事情比较多的缘故吧），中途可能有些文字不太连贯，望友海涵。\nqrbtf的二维码是迄今我所知道的，效果最好的AI二维码生成工具之一。但是它现在还在内测，我无法利用它生成自己的二维码，它生成的二维码暂时都是指向它的站点的。例如下图： qrbtf.com内测中的api密钥是qrbtf-ai。\n除此之外，quickqr的机器人也是不错的工具。具体操作不赘述，见其官网。\nhuggingface中的Stable Diffusion模型稍显逊色，它所生成的人像表情可能有些怪异。\n网址如下：\nhttps://qrbtf.com/\nhttps://quickqr.art/\nhttps://huggingface.co/spaces/huggingface-projects/QR-code-AI-art-generator\nhttps://huggingface.co/spaces/ioclab/ai-qrcode-api\nhttps://huggingface.co/spaces/stabilityai/stable-diffusion\n总结与反思 AI在二维码领域的应用给人们的生活带来了巨大的变革。它提高了扫描速度和准确度，拓宽了二维码的应用领域，加强了安全保障机制，并促进了商业创新的发展，令人眼前一亮。然而，我们也要认识到AI技术的应用不会不是一把双刃剑。优胜劣汰。生产力进步，原地踏步终究会被淘汰。（朋友语）\n参考资料 其一\n其二\n","date":"2023-07-18T00:00:00Z","image":"https://dongli.pages.dev/file/366fe8fab8b6919f01237.jpg","permalink":"https://brume.top/p/ai%E5%9C%A8%E4%BA%8C%E7%BB%B4%E7%A0%81%E9%A2%86%E5%9F%9F%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%B7%A8%E5%A4%A7%E5%8F%98%E9%9D%A9/","title":"AI在二维码领域带来的巨大变革"},{"content":"今天考完自招，将原来的个人网站彻底迁移到这里，想起了曾经的网站被DNS劫持过，便以我之所学，写一小段文字，以备不时之需。\n旧日班上，下课时间，一群同学总喜欢凑在电脑屏幕前玩电脑。一次他们在网上冲浪一段时间后，突然怪叫起来。我抬起头，看见几个男生向我跑来，大笑着告诉我我的主页跳转到了其他网站。此时他们已经把跳转后的网站关掉了。在看了浏览记录后，我大为诧异，但我晚上回家打开网站时，却一如往常。事后经分析，我的原网站大概率被DNS劫持。\n由于申请到了新域名，原来的网站已被弃用，但新站还是需要预防DNS劫持的。以下是我对应对DNS劫持的方法。\n确认自己的域名是否被进行了DNS劫持 被DNS劫持的域名无论怎么访问都会直接跳转至其他的站点，此时可以直接使用IP进行访问，如果IP访问正常但域名访问一直跳转，那大概率是自己的域名被劫持了。这种情况，需要联系DNS解析方面或者服务器方面的工作人员进行处理。\n确认自己的模板文件是不是被添加了跳转代码 此时可以在后台暂时更换成其他安全的模板，如果不再跳转，那就说明是模板文件里面被加了料。\n一般跳转代码会添加到JS文件中，尤其jQuery库是被加料的重灾区，可以查看各JS文件开头结尾是不是多出了一些加密代码，如果有，删掉后清理缓存再访问试试。\n1 2 3 4 5 6 \u0026lt;!--使用meta标签跳转--\u0026gt; \u0026lt;meta http-equiv=\u0026#34;refresh\u0026#34; content=\u0026#34;0;url＝http://example.com\u0026#34;\u0026gt; \u0026lt;!--使用JavaScript跳转--\u0026gt; \u0026lt;script language=\u0026#34;javascript\u0026#34; type=\u0026#34;text/javascript\u0026#34;\u0026gt; window.location.href = \u0026#39;http://example.com\u0026#39;; \u0026lt;/script\u0026gt; 或者直接把可疑的文件或完整模板包更换成下载模板压缩包里的原始文件。\n如果更换其他的模板仍然跳转，那就是cms程序或者运行环境被黑了 这种情况一般黑客会在运行环境里动手脚，比如apache和nginx被黑，自动在网页里面增加跳转代码，甚至可以控制频率，比如每天只加一次，而且只在手机版访问的时候出现，极其隐蔽，很难排查。\n遇到这种情况，可以重新安装cms程序或者在服务器管理面板（如宝塔）里面卸载并重装apache/nginx这些运行环境，即可解决问题。\n如果还是不行，那应该就是数据库或者服务器被黑了。 这种情况，直接联系服务器方的工作人员帮忙处理，普通人大概率是搞不定了。\n总之，整体思路就是定位问题具体出现的位置，然后针对性处理就可以了。\n修改或处理前一定要记得备份！\n平时也一定做好服务器的安全防护工作，以及定期备份网站和数据库，防患于未然！\n","date":"2023-07-01T00:00:00Z","permalink":"https://brume.top/p/the-solution-of-domain-abnormal-redirections/","title":"域名跳转解决方案"},{"content":"检验自己三年学习成果的考试已经结束，偷得浮生半日闲。在误删数据库导致博客文章被悉数清空的两个月后，我又一次登录进了这个网站。意图很明显，我要重新开始。\n大概是因为我最近经历了很多事情吧，当我翻看以前写的作品时，感觉现在的我和过去的我已经截然不同了。如果将这两个时间段的文字放在一起对比，会感受到一种奇妙的反差吧。\n积攒了很多话想说，却不愿意在互联网的方寸之间挥洒笔墨——我的思绪还是太发散，不适合写这篇题为“重新开始”的文章。我深知自己不能懈怠，只愿意趁着半日光阴把网站重新建好，或许也算是自己成长的见证。\n现在看来，“重新开始”是新的征途的开始；是新的梦想、新的希望的开始；是新的成长、新的气象的开始！\n有句话我特别喜欢——能够掌握时间的人，才能够掌握自己的一生。\n我深信不疑，我，将会让我超越平常的自己。\n我，要重新开始。\n","date":"2023-06-28T00:00:00Z","permalink":"https://brume.top/p/restart/","title":"重新开始"},{"content":"春树暮云 has been successfully created! why we call the site 春树暮云 ?“春树暮云” is from a piece of poem written by Du Fu, a well-known poet. In the past, it means missing friends from afar. Now I think it also means pursue our ideals. Spring trees and evining clouds symbolize our unattainable dreams, hard to achieve but also have hope. It\u0026rsquo;s our duty to achieve it, achieve “春树暮云”。\n","date":"2022-12-31T00:00:00Z","permalink":"https://brume.top/p/hello-world/","title":"Hello World"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://brume.top/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu4699868770670889127.jpg","permalink":"https://brume.top/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://brume.top/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://brume.top/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://brume.top/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu10664154974910995856.jpg","permalink":"https://brume.top/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2019-03-08T00:00:00Z","permalink":"https://brume.top/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://brume.top/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://brume.top/p/emoji-support/","title":"Emoji Support"}]