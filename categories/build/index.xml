<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Build on 春树暮云</title>
        <link>https://leng-yd.github.io/categories/build/</link>
        <description>Recent content in Build on 春树暮云</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>春树暮云</copyright>
        <lastBuildDate>Wed, 28 Aug 2024 20:35:54 +0800</lastBuildDate><atom:link href="https://leng-yd.github.io/categories/build/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Hugo与Typecho之对比</title>
        <link>https://leng-yd.github.io/p/a-comparison-between-typecho-and-hugo/</link>
        <pubDate>Wed, 28 Aug 2024 20:35:54 +0800</pubDate>
        
        <guid>https://leng-yd.github.io/p/a-comparison-between-typecho-and-hugo/</guid>
        <description>&lt;img src="https://img.brume.top/file/0a665c213503e3f8d2d41.png" alt="Featured image of post Hugo与Typecho之对比" /&gt;&lt;p&gt;在8月下旬，暑假结束前的几周时间，我的空余时间变多了，精力也充沛了不少，悠闲得很。我闲来无聊，去翻翻自己的博客，发现大陆的防火墙禁用了通过 http 协议访问 *.eu.org 域名的方式，随即在腾讯云上注册了这个新域名，&lt;code&gt;brume.top&lt;/code&gt;。我觉得既然注册了新域名，倒不如把全站一并更新吧。于是在网络上到处搜索 Typecho 主题，但鲜有满意的。我以前也想过自己写出自己满意的主题，遗憾的是眼高手低，页面布局属实稀烂，自己都看不下去。我便产生了想放弃 Typecho 的想法。在逛了无数个自己收藏的博客之后，我选择了 hugo 。&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;世界上最快的网站构建框架———— Hugo 是最受欢迎的开源静态站点生成器之一。凭借其惊人的速度和灵活性，Hugo 让构建网站再次变得有趣。&lt;br&gt;&lt;p align=&#34;right&#34;&gt;翻译自 hugo 官网&lt;/p&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hugo 和 Typecho 大相径庭。它们是静态网站生成器和动态博客平台的典型代表。它们各有优劣。（下文部分由 AI 总结，并根据我的真实感受撰写成文）&lt;/p&gt;
&lt;h3 id=&#34;速率方面&#34;&gt;&lt;strong&gt;速率方面&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：这是 Hugo 最引以为豪的一点。作为静态网站生成器，Hugo 在性能方面是属于碾压 Typecho 的存在。Hugo 生成的站点是纯静态的 HTML 文件，访问者在浏览网站时完全不需要进行动态内容的生成和前后端的交互，加载速度非常快。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typecho&lt;/strong&gt;：Typecho 在这方面稍微逊色，作为一个基于 PHP 和 MySQL 的动态博客系统，它的每次访问都会需要从数据库读取数据，并生成相应的页面。对于小型的个人博客站点，抛开加载图片或字体等资源不谈，它们之间访问速率的差异很小，基本可以忽略不计。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;维护方面&#34;&gt;&lt;strong&gt;维护方面&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：Hugo 生成静态页面后，不需要服务器支持 PHP 或数据库，直接部署即可。一般情况下，在部署后，网站不需要任何后台维护，只需使用静态服务器来托管即可。常见的托管服务的提供商有 GitHub Pages, Netlify, Vercel 等。在 Hugo 的&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/hosting-and-deployment/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;文档&lt;/a&gt;中也有提及。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typecho&lt;/strong&gt;：需要服务器支持 PHP 和数据库，因此在使用过程中涉及服务器环境的配置和维护。需要定期对服务器环境和数据库进行&lt;strong&gt;备份&lt;/strong&gt;和更新。我之前就曾经发生过误删除数据库的事情。防患于未然的不二法门就是定期备份数据库。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;可扩展性方面&#34;&gt;&lt;strong&gt;可扩展性方面&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：Hugo 本质上是一个生成静态网站的工具，因此对动态插件的支持比较有限。整体来说不如动态博客系统那样灵活。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typecho&lt;/strong&gt;：Typecho 支持通过插件扩展功能。但如果将 Typecho 和其他主流的动态博客系统相比，它的插件生态相对较小，选择有限。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;开发效率方面&#34;&gt;&lt;strong&gt;开发效率方面&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：Hugo 使用 Go 语言开发，生成网站速度非常快。网站的开发和生成流程也相对自动化，基于配置文件和 Markdown 语法，简单高效。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typecho&lt;/strong&gt;：Typecho 安装和配置比 Hugo 简单多了，但作为动态网站系统，日常运营过程中需要处理服务器和数据库相关的问题，Hugo 就不会出现这样的顾虑。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;seo-友好方面&#34;&gt;&lt;strong&gt;SEO 友好方面&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：Hugo 本身作为静态网站生成器，所有页面都是预生成的，SEO 友好，加载速度快，对搜索引擎友好。另外，由于没有动态生成的网页，Hugo 在访问控制方面比较困难。它一般依赖于 CDN、反向代理或自定义前端实现访问控制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typecho&lt;/strong&gt;：Typecho 可以通过插件或自定义开发支持更多的访问控制、权限管理等功能。此外，动态内容有助于实现一些基于用户行为的功能，比如个性化推荐和用户登录系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安全性方面&#34;&gt;&lt;strong&gt;安全性方面&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：因为生成的是静态页面，没有后台和数据库的存在，因此几乎不存在被攻击的风险，安全性极高。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typecho&lt;/strong&gt;：由于是动态系统，存在 PHP 代码执行、数据库操作等，需要注意服务器和程序的安全更新。此外，如果插件质量不佳，可能带来安全隐患。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;学习曲线方面&#34;&gt;&lt;strong&gt;学习曲线方面&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：尽管生成静态网站相对简单，但 Hugo 的学习曲线可能会有一些陡峭，尤其是在&lt;strong&gt;部署&lt;/strong&gt;、主题定制、短代码使用和一些高级功能的配置上。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typecho&lt;/strong&gt;：Typecho 的管理界面和功能比较直观，对小白友好，基本不需要深入了解代码即可搭建和管理网站。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;内容管理方面&#34;&gt;&lt;strong&gt;内容管理方面&lt;/strong&gt;
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hugo&lt;/strong&gt;：Hugo 通过 Markdown 文件来管理内容，编辑文章需要在本地进行，编辑和发布内容需要通过 Git 等工具进行管理，适合开发者或技术爱好者。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Typecho&lt;/strong&gt;：Typecho 提供了后台管理系统，支持直接在浏览器中编辑、发布和管理文章，操作方便，适合非技术用户或习惯于动态博客系统的用户。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;总结&#34;&gt;总结
&lt;/h3&gt;&lt;p&gt;在以下几个方面，Hugo 相比 Typecho 存在优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;性能&lt;/strong&gt;：动态网站速度较慢，尤其在流量大时。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;维护复杂性&lt;/strong&gt;：依赖 PHP 和数据库，服务器配置与维护需要更多工作。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;扩展性（插件支持较弱）&lt;/strong&gt;：虽然支持插件，但生态不如主流动态系统丰富。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;：由于动态性，安全风险比静态生成器更大。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
